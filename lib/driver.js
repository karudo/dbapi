// Generated by CoffeeScript 1.8.0
var Collection, Driver;

Collection = requre('./collection');

Driver = (function() {
  function Driver(driverObject, params) {
    this.driverObject = driverObject;
    this.params = params;
    this.collections = {};
    this.Self = {};
  }

  Driver.prototype.getCollection = function(url) {
    if (!this.collections[url]) {
      this.collections[url] = promise.resolve().then(function() {
        var collectionParams, urlArr;
        urlArr = url.split('#').map(function(v) {
          var name, query, _ref;
          _ref = v.split(':'), name = _ref[0], query = _ref[1];
          return {
            name: name,
            query: query
          };
        });
        collectionParams = urlArr.reduce(function(curSchema, step) {
          var curStepParams, _ref;
          curStepParams = (_ref = curSchema.childs) != null ? _ref[step.name] : void 0;
          if (!curStepParams) {
            throw new Error("no childs " + step.name);
          }
          return curStepParams;
        }, {
          childs: this.driverObject.schema
        });
        return new Collection(this, collectionParams, {
          url: url,
          urlArr: urlArr
        });
      });
      this.collections[url].caught((function(_this) {
        return function() {
          return delete _this.collections[url];
        };
      })(this));
    }
    return this.collections[url];
  };

  return Driver;

})();

module.exports = Driver;
