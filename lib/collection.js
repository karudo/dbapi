// Generated by CoffeeScript 1.8.0
var Collection, isFunction, promise,
  __slice = [].slice;

isFunction = require('lodash').isFunction;

promise = require('./promise');

Collection = (function() {
  function Collection(driver, schema, path) {
    var _ref;
    this.driver = driver;
    this.schema = schema;
    this.path = path;
    this.Self = {
      driver: this.driver.Self
    };
    if ((_ref = this.schema.init) != null) {
      _ref.call(this);
    }
  }

  Collection.prototype.execMethod = function() {
    var args, func, methodName, _ref;
    methodName = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    func = (_ref = this.schema.methods[methodName]) != null ? _ref.func : void 0;
    if (!isFunction(func)) {
      return promise.reject('unknown method');
    }
    return func.apply(this.Self, args);
  };

  Collection.prototype.getStructure = function() {};

  return Collection;

})();

module.exports = Collection;
